{"ast":null,"code":"import { CHANGE_SEARCH_FIELD, REQUEST_ROBOTS_PENDING, REQUEST_ROBOTS_SUCCESS, REQUEST_ROBOTS_FAILED } from './constants.js';\nexport var setSearch = function setSearch(text) {\n  return {\n    type: CHANGE_SEARCH_FIELD,\n    payload: text\n  };\n};\nexport var requestRobots = function requestRobots() {\n  return function (dispatch) {\n    dispatch({\n      type: REQUEST_ROBOTS_PENDING\n    });\n    fetch('http://jsonplaceholder.typicod.com/users').then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return dispatch({\n        type: REQUEST_ROBOTS_SUCCESS,\n        payload: data\n      });\n    }).catch(function (error) {\n      return dispatch({\n        type: REQUEST_ROBOTS_FAILED,\n        payload: error\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/kevinnmitchell/Desktop/Robofriends/src/actions.js"],"names":["CHANGE_SEARCH_FIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","setSearch","text","type","payload","requestRobots","dispatch","fetch","then","response","json","data","catch","error"],"mappings":"AAAA,SAAQA,mBAAR,EACIC,sBADJ,EAEIC,sBAFJ,EAGIC,qBAHJ,QAIO,gBAJP;AAOA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,IAAD;AAAA,SAAW;AACpCC,IAAAA,IAAI,EAACN,mBAD+B;AAEpCO,IAAAA,OAAO,EAAEF;AAF2B,GAAX;AAAA,CAAlB;AAKP,OAAO,IAAMG,aAAa,GAAG,SAAhBA,aAAgB;AAAA,SAAM,UAACC,QAAD,EAAc;AACzCA,IAAAA,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAEL;AAAR,KAAD,CAAR;AACAS,IAAAA,KAAK,CAAC,0CAAD,CAAL,CACCC,IADD,CACM,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADd,EAECF,IAFD,CAEM,UAAAG,IAAI;AAAA,aAAIL,QAAQ,CAAC;AAAEH,QAAAA,IAAI,EAAEJ,sBAAR;AAAgCK,QAAAA,OAAO,EAAEO;AAAzC,OAAD,CAAZ;AAAA,KAFV,EAGCC,KAHD,CAGO,UAAAC,KAAK;AAAA,aAAIP,QAAQ,CAAC;AAACH,QAAAA,IAAI,EAAEH,qBAAP;AAA8BI,QAAAA,OAAO,EAAES;AAAvC,OAAD,CAAZ;AAAA,KAHZ;AAIH,GANwB;AAAA,CAAtB","sourcesContent":["import {CHANGE_SEARCH_FIELD,\n    REQUEST_ROBOTS_PENDING,\n    REQUEST_ROBOTS_SUCCESS,\n    REQUEST_ROBOTS_FAILED\n} from './constants.js';\n\n\nexport const setSearch = (text) => ({\ntype:CHANGE_SEARCH_FIELD,\npayload: text\n})\n\nexport const requestRobots = () => (dispatch) => {\n        dispatch({ type: REQUEST_ROBOTS_PENDING})\n        fetch('http://jsonplaceholder.typicod.com/users')\n        .then(response => response.json())\n        .then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data}))\n        .catch(error => dispatch({type: REQUEST_ROBOTS_FAILED, payload: error}))\n    }\n\n\n"]},"metadata":{},"sourceType":"module"}