{"ast":null,"code":"import _classCallCheck from \"/Users/kevinnmitchell/Desktop/Robofriends/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kevinnmitchell/Desktop/Robofriends/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kevinnmitchell/Desktop/Robofriends/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kevinnmitchell/Desktop/Robofriends/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kevinnmitchell/Desktop/Robofriends/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kevinnmitchell/Desktop/Robofriends/src/containers/App.js\";\nimport React, { Component } from 'react';\nimport CardList from '../components/CardList.js';\nimport { connect } from 'react-redux';\nimport SearchBox from '../components/SearchBox.js';\nimport './App.css';\nimport Scroll from '../components/Scroll.js';\nimport { setSearch, requestRobots } from '../actions.js';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    searchField: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending,\n    error: state.requestRobots.error\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onSearchChange: function onSearchChange(event) {\n      return dispatch(setSearch(event.target.value));\n    },\n    onRequestRobots: function onRequestRobots() {\n      return requestRobots(dispatch);\n    }\n  };\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {\n      robots: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // fetch('http://jsonplaceholder.typicode.com/users')\n      // .then(response => response.json())\n      // .then(users => this.setState({robots: users}));\n      this.props.onRequestRobots;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var robots = this.state.robots;\n      var _this$props = this.props,\n          searchField = _this$props.searchField,\n          onSearchChange = _this$props.onSearchChange;\n      var filteredRobot = robots.filter(function (robot) {\n        return robot.name.toLowerCase().includes(searchField.toLowerCase());\n      });\n\n      if (robots.length === 0) {\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, \"Loading\");\n      } else {\n        return React.createElement(\"div\", {\n          className: \"tc\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          className: \"f1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, \" RoboFriends\"), React.createElement(SearchBox, {\n          searchChange: onSearchChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }), React.createElement(Scroll, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(CardList, {\n          robots: filteredRobot,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        })));\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/kevinnmitchell/Desktop/Robofriends/src/containers/App.js"],"names":["React","Component","CardList","connect","SearchBox","Scroll","setSearch","requestRobots","mapStateToProps","state","searchField","searchRobots","robots","isPending","error","mapDispatchToProps","dispatch","onSearchChange","event","target","value","onRequestRobots","App","props","filteredRobot","filter","robot","name","toLowerCase","includes","length"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAQC,SAAR,MAAuB,4BAAvB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAAQC,SAAR,EAAmBC,aAAnB,QAAuC,eAAvC;;AAGA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAClC,SAAO;AACNC,IAAAA,WAAW,EAAED,KAAK,CAACE,YAAN,CAAmBD,WAD1B;AAENE,IAAAA,MAAM,EAAEH,KAAK,CAACF,aAAN,CAAoBK,MAFtB;AAGNC,IAAAA,SAAS,EAAEJ,KAAK,CAACF,aAAN,CAAoBM,SAHzB;AAINC,IAAAA,KAAK,EAAEL,KAAK,CAACF,aAAN,CAAoBO;AAJrB,GAAP;AAMA,CAPD;;AASA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACxC,SAAM;AACLC,IAAAA,cAAc,EAAE,wBAACC,KAAD;AAAA,aAAWF,QAAQ,CAACV,SAAS,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV,CAAnB;AAAA,KADX;AAELC,IAAAA,eAAe,EAAE;AAAA,aAAMd,aAAa,CAACS,QAAD,CAAnB;AAAA;AAFZ,GAAN;AAKA,CAND;;IAOMM,G;;;;;AAEL,iBACA;AAAA;;AAAA;;AACC;AACA,UAAKb,KAAL,GAAa;AAEdG,MAAAA,MAAM,EAAE;AAFM,KAAb;AAFD;AAOA;;;;wCAEkB;AACnB;AACA;AACA;AACA,WAAKW,KAAL,CAAWF,eAAX;AAEC;;;6BAEQ;AAAA,UAECT,MAFD,GAEa,KAAKH,KAFlB,CAECG,MAFD;AAAA,wBAGgC,KAAKW,KAHrC;AAAA,UAGCb,WAHD,eAGCA,WAHD;AAAA,UAGaO,cAHb,eAGaA,cAHb;AAIN,UAAMO,aAAa,GAAGZ,MAAM,CAACa,MAAP,CAAc,UAAAC,KAAK,EAAG;AAC3C,eAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCnB,WAAW,CAACkB,WAAZ,EAAlC,CAAP;AACA,OAFqB,CAAtB;;AAIA,UAAGhB,MAAM,CAACkB,MAAP,KAAkB,CAArB,EACA;AACC,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACA,OAHD,MAKA;AACC,eACE;AAAK,UAAA,SAAS,EAAG,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA;AAAI,UAAA,SAAS,EAAG,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,EAEC,oBAAC,SAAD;AAAW,UAAA,YAAY,EAAIb,cAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFD,EAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC,oBAAC,QAAD;AAAU,UAAA,MAAM,EAAIO,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,CAHF,CADF;AASA;AAGF;;;;EA9CgBvB,S;;AAiDlB,eAAeE,OAAO,CAACK,eAAD,EAAkBO,kBAAlB,CAAP,CAA6CO,GAA7C,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport CardList from '../components/CardList.js';\nimport {connect} from 'react-redux';\nimport  SearchBox from '../components/SearchBox.js';\nimport './App.css';\nimport Scroll from '../components/Scroll.js'\nimport {setSearch, requestRobots} from '../actions.js';\n\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tsearchField: state.searchRobots.searchField,\n\t\trobots: state.requestRobots.robots,\n\t\tisPending: state.requestRobots.isPending,\n\t\terror: state.requestRobots.error,\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn{\n\t\tonSearchChange: (event) => dispatch(setSearch(event.target.value)),\n\t\tonRequestRobots: () => requestRobots(dispatch)\n\n\t}\n}\nclass App extends Component\n{\n\tconstructor()\n\t{\n\t\tsuper()\n\t\tthis.state = {\n\n\trobots: []\n\n\t}\n}\n\ncomponentDidMount(){\n// fetch('http://jsonplaceholder.typicode.com/users')\n// .then(response => response.json())\n// .then(users => this.setState({robots: users}));\nthis.props.onRequestRobots;\n\n}\n\n\trender(){\n\n\t\t\tconst {robots, } = this.state;\n\t\t\tconst {searchField,onSearchChange } = this.props;\n\t\t\tconst filteredRobot = robots.filter(robot =>{\n\t\t\t\treturn robot.name.toLowerCase().includes(searchField.toLowerCase());\n\t\t\t})\n\t\t\t\n\t\t\tif(robots.length === 0)\n\t\t\t{\n\t\t\t\treturn <h1>Loading</h1>;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t return(\n\t\t\t\t\t <div className = 'tc'>\n\t\t\t\t\t\t<h1 className = 'f1'> RoboFriends</h1>\n\t\t\t\t\t\t\t<SearchBox searchChange = {onSearchChange}/>\n\t\t\t\t\t\t\t\t<Scroll>\n\t\t\t\t\t\t\t\t\t<CardList robots = {filteredRobot}/>\n\t\t\t\t\t\t\t\t</Scroll>\n\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t}\n\n\t\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}