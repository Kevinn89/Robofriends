{"ast":null,"code":"import _classCallCheck from \"/Users/kevinnmitchell/Desktop/Robofriends/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kevinnmitchell/Desktop/Robofriends/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kevinnmitchell/Desktop/Robofriends/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kevinnmitchell/Desktop/Robofriends/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kevinnmitchell/Desktop/Robofriends/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kevinnmitchell/Desktop/Robofriends/src/containers/App.js\";\nimport React, { Component } from 'react';\nimport CardList from '../components/CardList.js';\nimport { connect } from 'react-redux';\nimport SearchBox from '../components/SearchBox.js';\nimport './App.css';\nimport Scroll from '../components/Scroll.js';\nimport { setSearch } from '../actions.js';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    searchfield: state.searchfield\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onSearchChange: function onSearchChange(event) {\n      return dispatch(setSearch(event.target.value));\n    }\n  };\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {\n      robots: [] //searchfield: ''\n\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('http://jsonplaceholder.typicode.com/users').then(function (response) {\n        return response.json();\n      }).then(function (users) {\n        return _this2.setState({\n          robots: users\n        });\n      });\n    } // onSearchChange = (event) => {\n    // \tthis.setState({searchfield: event.target.value})\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var robots = this.state.robots;\n      var searchfield = this.props.searchfield;\n      var filteredRobot = robots.filter(function (robot) {\n        return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n      });\n\n      if (robots.length === 0) {\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, \"Loading\");\n      } else {\n        return React.createElement(\"div\", {\n          className: \"tc\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          className: \"f1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, \" RoboFriends\"), React.createElement(SearchBox, {\n          searchChange: onSearchChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }), React.createElement(Scroll, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(CardList, {\n          robots: filteredRobot,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        })));\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/kevinnmitchell/Desktop/Robofriends/src/containers/App.js"],"names":["React","Component","CardList","connect","SearchBox","Scroll","setSearch","mapStateToProps","state","searchfield","mapDispatchToProps","dispatch","onSearchChange","event","target","value","App","robots","fetch","then","response","json","users","setState","props","filteredRobot","filter","robot","name","toLowerCase","includes","length"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAQC,SAAR,MAAuB,4BAAvB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAAQC,SAAR,QAAwB,eAAxB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAClC,SAAO;AACNC,IAAAA,WAAW,EAAED,KAAK,CAACC;AADb,GAAP;AAGA,CAJD;;AAMA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACxC,SAAM;AACLC,IAAAA,cAAc,EAAE,wBAACC,KAAD;AAAA,aAAWF,QAAQ,CAACL,SAAS,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV,CAAnB;AAAA;AADX,GAAN;AAKA,CAND;;IAOMC,G;;;;;AAEL,iBACA;AAAA;;AAAA;;AACC;AACA,UAAKR,KAAL,GAAa;AAEdS,MAAAA,MAAM,EAAE,EAFM,CAGd;;AAHc,KAAb;AAFD;AAQA;;;;wCAEkB;AAAA;;AACnBC,MAAAA,KAAK,CAAC,2CAAD,CAAL,CACCC,IADD,CACM,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADd,EAECF,IAFD,CAEM,UAAAG,KAAK;AAAA,eAAI,MAAI,CAACC,QAAL,CAAc;AAACN,UAAAA,MAAM,EAAEK;AAAT,SAAd,CAAJ;AAAA,OAFX;AAIC,K,CAGC;AAEA;AACA;;;;6BAEO;AAAA,UAECL,MAFD,GAEa,KAAKT,KAFlB,CAECS,MAFD;AAAA,UAGCR,WAHD,GAGgB,KAAKe,KAHrB,CAGCf,WAHD;AAIN,UAAMgB,aAAa,GAAGR,MAAM,CAACS,MAAP,CAAc,UAAAC,KAAK,EAAG;AAC3C,eAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCrB,WAAW,CAACoB,WAAZ,EAAlC,CAAP;AACA,OAFqB,CAAtB;;AAIA,UAAGZ,MAAM,CAACc,MAAP,KAAkB,CAArB,EACA;AACC,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACA,OAHD,MAKA;AACC,eACE;AAAK,UAAA,SAAS,EAAG,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA;AAAI,UAAA,SAAS,EAAG,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,EAEC,oBAAC,SAAD;AAAW,UAAA,YAAY,EAAInB,cAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFD,EAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC,oBAAC,QAAD;AAAU,UAAA,MAAM,EAAIa,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,CAHF,CADF;AASA;AAGF;;;;EApDgBxB,S;;AAuDlB,eAAeE,OAAO,CAACI,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CM,GAA7C,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport CardList from '../components/CardList.js';\nimport {connect} from 'react-redux';\nimport  SearchBox from '../components/SearchBox.js';\nimport './App.css';\nimport Scroll from '../components/Scroll.js'\nimport {setSearch} from '../actions.js';\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tsearchfield: state.searchfield\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn{\n\t\tonSearchChange: (event) => dispatch(setSearch(event.target.value))\n\n\n\t}\n}\nclass App extends Component\n{\n\tconstructor()\n\t{\n\t\tsuper()\n\t\tthis.state = {\n\n\trobots: [],\n\t//searchfield: ''\n\n\t}\n}\n\ncomponentDidMount(){\nfetch('http://jsonplaceholder.typicode.com/users')\n.then(response => response.json())\n.then(users => this.setState({robots: users}));\n\n}\n\n\t\t\n\t\t// onSearchChange = (event) => {\n\n\t\t// \tthis.setState({searchfield: event.target.value})\n\t\t// }\n\n\trender(){\n\n\t\t\tconst {robots, } = this.state;\n\t\t\tconst {searchfield} = this.props;\n\t\t\tconst filteredRobot = robots.filter(robot =>{\n\t\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\n\t\t\t})\n\t\t\t\n\t\t\tif(robots.length === 0)\n\t\t\t{\n\t\t\t\treturn <h1>Loading</h1>;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t return(\n\t\t\t\t\t <div className = 'tc'>\n\t\t\t\t\t\t<h1 className = 'f1'> RoboFriends</h1>\n\t\t\t\t\t\t\t<SearchBox searchChange = {onSearchChange}/>\n\t\t\t\t\t\t\t\t<Scroll>\n\t\t\t\t\t\t\t\t\t<CardList robots = {filteredRobot}/>\n\t\t\t\t\t\t\t\t</Scroll>\n\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t}\n\n\t\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}